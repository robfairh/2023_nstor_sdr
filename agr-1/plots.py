import os
import sys
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


# --------------------
#
# -- Burnup results --
#
# --------------------
# PLOTS burnup vs z
data = pd.read_csv("MOAA_burnup_FIMA.csv", index_col=[0])

plt.figure()
fima = {}
for stack in range(1, 4):
    fima[stack] = []
    for cap in range(1, 7):
        for comp in range(1, 5):
            cell = int(90000 + cap*1000 + stack*100 + 2*(comp-1)*10 + 1)
            values = data.loc[cell].to_numpy()
            fima[stack].append(values[-1])

for stack, values in fima.items():
    plt.plot(fima[stack][::-1], label=f'stack: {stack}', marker='o')

plt.ylabel(r'Burnup [\% FIMA]')
plt.xlabel('Axial position [from the top]')
plt.legend()
plt.savefig("burnup_axial", dpi=300, bbox_inches="tight", transparent=True)
plt.close()


# --------------------
#
# --   SDR results  --
#
# --------------------
# Intensities
"""
Values are organized as follows:
values_by_step: dict
  keys: decay steps
  values: intensity by batch

intensity by batch:
  key: batches: 0-11: fuel, 12: bottom SS316L, 13-... the other structures, -1:
bottom SS316L of the whole train
  values: intensities gamma/sec
"""
values_by_step = {
    0: {
        0: 50208228617605.67,
        1: 49413904542854.76,
        2: 54537055014477.25,
        3: 54578772554721.19,
        4: 57263135533733.89,
        5: 57200633974571.5,
        6: 56186213822456.79,
        7: 55619845962710.67,
        8: 55812581164227.44,
        9: 56232584118254.55,
        10: 47040148131410.47,
        11: 43273764938085.805,
        12: 7873192105882.6,
        13: 5136297260310.51,
        14: 10201764580562.68,
        15: 37492349008901.9,
        16: 8317.858457500994,
        17: 9640.902350531154,
        18: 9077843.659925416,
        19: 499466064610021.6,
        20: 1263224568063.4
    },
    1: {
        0: 29607991740493.38,
        1: 29159485644406.133,
        2: 32345853789918.72,
        3: 32496815425650.6,
        4: 33648738949294.83,
        5: 33970565400727.453,
        6: 33046566684792.305,
        7: 33218021790599.93,
        8: 33050802463950.055,
        9: 33209138238180.66,
        10: 27955030602575.742,
        11: 25751554696958.945,
        12: 6861057017802.289,
        13: 4457752168030.435,
        14: 8860665474669.775,
        15: 32810283536067.02,
        16: 8317.848457500982,
        17: 9640.902350531142,
        18: 9073881.749606036,
        19: 445967512528070.1,
        20: 1112691566300.9539
    },
    2: {
        0: 14942363948440.479,
        1: 14726106298851.012,
        2: 16340945883611.967,
        3: 16646830135199.29,
        4: 16591011239329.5,
        5: 17257226159486.922,
        6: 16368339558165.018,
        7: 17071638988208.043,
        8: 16671371738019.969,
        9: 16787627231154.508,
        10: 14314840585872.402,
        11: 13355181811564.775,
        12: 5394293864866.481,
        13: 3477839749239.129,
        14: 6942223559589.631,
        15: 25886651905166.688,
        16: 8317.708457500981,
        17: 9640.782350531143,
        18: 9059705.549606036,
        19: 340716626563078.9,
        20: 886090174900.148
    },
    3: {
        0: 7616127377919.982,
        1: 7373225900686.664,
        2: 8457237189654.12,
        3: 8515477604306.26,
        4: 8661033809010.314,
        5: 8878105942800.777,
        6: 8545072101991.445,
        7: 8804804072469.904,
        8: 8551716031817.394,
        9: 8460947553294.366,
        10: 7206749676104.244,
        11: 6624819544685.341,
        12: 3251695829847.082,
        13: 2048338991706.748,
        14: 4184683078094.774,
        15: 15522468125699.371,
        16: 8317.528357500982,
        17: 9640.392350531141,
        18: 9018081.689606037,
        19: 202044636518008.03,
        20: 540947039386.339
    },
    4: {
        0: 3271577285831.257,
        1: 3082241828882.3286,
        2: 3748482454764.911,
        3: 3661344742050.548,
        4: 3937672855025.7236,
        5: 3874757758270.612,
        6: 3877099993782.1416,
        7: 3832638403462.0166,
        8: 3734241018903.3247,
        9: 3549498789281.9053,
        10: 3043689756300.3433,
        11: 2698676528113.852,
        12: 1392617587754.0015,
        13: 811024281423.1096,
        14: 1794329432776.8984,
        15: 6546427831473.83,
        16: 8316.455257500982,
        17: 9639.618250531143,
        18: 8880210.989606038,
        19: 43525147181290.23,
        20: 240026002022.8811
    },
    5: {
        0: 1089173565982.2683,
        1: 980442720485.8215,
        2: 1312133579376.1665,
        3: 1217045235291.6484,
        4: 1435906809058.3608,
        5: 1323182377523.9192,
        6: 1410827994851.3003,
        7: 1297593406977.3105,
        8: 1279143882283.714,
        9: 1133643031211.4128,
        10: 988024651756.7819,
        11: 823008083600.4984,
        12: 944865548943.3533,
        13: 530948953044.6365,
        14: 1218684350556.1475,
        15: 4437426223541.321,
        16: 8313.50695750098,
        17: 9637.288550531139,
        18: 8479478.978606036,
        19: 1021877112096.0458,
        20: 165395512764.2764
    },
    6: {
        0: 564561786006.646,
        1: 499988898303.4941,
        2: 690295263731.8407,
        3: 627908728326.2516,
        4: 764825849255.4708,
        5: 689720384060.4141,
        6: 751992296686.1312,
        7: 672989899549.0956,
        8: 668984012603.4471,
        9: 577178742121.2965,
        10: 508914114272.8271,
        11: 414505934875.9015,
        12: 718472493606.0967,
        13: 401218894815.78564,
        14: 927021169205.8304,
        15: 3378963557874.226,
        16: 8309.87645750098,
        17: 9634.42805053114,
        18: 8016102.598606036,
        19: 65066548379.695366,
        20: 126386923058.0364
    }
}

for d_step, values_by_batch in values_by_step.items():
    intensities = []
    fuel = 0
    for batch, values in values_by_batch.items():
        if batch < 12:
            fuel += values
        else:
            intensities.append(fuel)
            break

    n_intens = list(values_by_batch.values())[12:]
    for v in n_intens:
        if v != n_intens[-1]:
            intensities.append(v)
        else:
            intensities[1] += v

    intensities = np.array(intensities)
    print(f'd_step {d_step} tot: {intensities.sum()}')
    print(intensities/intensities.sum()*100)
